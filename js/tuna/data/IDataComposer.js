/////////////////////////////////////////////////////////////////////////////////////////
//
//	TUNA FRAMEWORK
//
//	Файл IDataComposer.js
//
//	Объявление функций интерфейса tuna.data.IDataComposer.
//
//	Author Kononenko Sergey <kononenheg@gmail.com>
//
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
//	Область имен.
/////////////////////////////////////////////////////////////////////////////////////////

var pkg = tuna.namespace("tuna.data");

/////////////////////////////////////////////////////////////////////////////////////////
//
//	Интерфейс tuna.data.IDataComposer
//
/////////////////////////////////////////////////////////////////////////////////////////

/**
 * Интерфейс классов компоновки нескольких наборов данных.
 */
pkg.IDataComposer = function() {};

/**
 * Фильтрация данных.
 *
 * @param {Array.<Object>} data Массив данных.
 * @return {Object} Отфильтрованые данные.
 */
pkg.IDataComposer.prototype.compose = function(data)
{
	throw new Error("Метод compose(data:Array.<Object>):void интерфейса " +
		"tuna.data.IDataComposer должен быть реализован.");

	return null;
};

/////////////////////////////////////////////////////////////////////////////////////////
//	Сокращения
/////////////////////////////////////////////////////////////////////////////////////////

tuna.typedef(pkg.IDataComposer, "IDataComposer");
