/////////////////////////////////////////////////////////////////////////////////////////
//
//	TUNA FRAMEWORK
//
//	Файл BasicEvent.js
//
//	Реализация класса tuna.event.BasicEvent.
//
//	Author Kononenko Sergey <kononenheg@gmail.com>
//
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
//	Область имен.
/////////////////////////////////////////////////////////////////////////////////////////

var pkg = tuna.namespace("tuna.event");

/////////////////////////////////////////////////////////////////////////////////////////
//
//	Класс tuna.event.BasicEvent
//
/////////////////////////////////////////////////////////////////////////////////////////

/**
 * Класс данных события.
 *
 * Базовый класс объектов информации о произошедшем событии.
 *
 * Тип события необходим для распределения между слушателями определенного события. При
 * необходимости, события могут содержать сопутствующие данные.
 *
 * @public
 * @constructor
 * @param {String} type Тип события.
 * @param {Object} data Сопутствующие данные.
 */
pkg.BasicEvent = function(type, data)
{
	/**
	 * Тип события.
	 *
	 * @public
	 * @type String
	 */
	this.type = type;

	/**
	 * Сопутствующие данные.
	 *
	 * @public
	 * @type Object
	 */
	this.data = data;

	/**
	 * Генератор события.
	 *
	 * @public
	 * @type tuna.event.IEventDispatcher
	 */
	this.target = null;
};

/**
 * Имя события готовности.
 *
 * @public @static
 * @type String
 */
pkg.BasicEvent.COMPLETE = "complete";

/////////////////////////////////////////////////////////////////////////////////////////
//	Сокращения
/////////////////////////////////////////////////////////////////////////////////////////

tuna.typedef(pkg.BasicEvent, "BasicEvent");