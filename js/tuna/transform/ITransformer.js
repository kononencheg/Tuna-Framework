/////////////////////////////////////////////////////////////////////////////////////////
//
//	TUNA FRAMEWORK
//
//	Файл ITransformer.js
//
//	Объявление функций интерфейса tuna.transform.ITransformer.
//
//	Author Kononenko Sergey <kononenheg@gmail.com>
//
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
//	Область имен.
/////////////////////////////////////////////////////////////////////////////////////////

var pkg = tuna.namespace("tuna.transform");

/////////////////////////////////////////////////////////////////////////////////////////
//
//	Интерфейс tuna.transform.ITransformer
//
/////////////////////////////////////////////////////////////////////////////////////////

/**
 * Интерфейс классов преобразования данных в отображение.
 */
pkg.ITransformer = function() {};

/**
 * Функция трансформации данных.
 *
 * @param {Object} data Данные для трансформации.
 * @return {Object} Результат трансформации, может быть строкой или DOM
 * фрагментом.
 */
pkg.ITransformer.prototype.transform = function(data)
{
	throw new Error("Метод transform(data:Object):Object интерфейса " +
		"tuna.transform.ITransformer должна быть реализованна");

	return null;
};

/////////////////////////////////////////////////////////////////////////////////////////
//	Сокращения
/////////////////////////////////////////////////////////////////////////////////////////

tuna.typedef(pkg.ITransformer, "ITransformer");
